{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Header() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      number1 = _useState2[0],\n      onChangeNumber1 = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      number2 = _useState4[0],\n      onChangeNumber2 = _useState4[1];\n\n  var resetData = function resetData() {};\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Text, {\n        style: styles.logo,\n        children: \"LOGO\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.divReset,\n        children: _jsx(Text, {\n          style: styles.textReset,\n          onPress: resetData,\n          children: \"Resetar\"\n        })\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#1B1726',\n    height: 100\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: 20,\n    marginTop: 40,\n    alignItems: 'center',\n    width: 330\n  },\n  logo: {\n    color: 'white'\n  },\n  divReset: {\n    backgroundColor: '#87f2a2',\n    width: 90,\n    height: 30,\n    padding: 5,\n    borderRadius: 10\n  },\n  textReset: {\n    color: '#121214',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/home/rafael/Documentos/github/imc/src/components/header/index.js"],"names":["StatusBar","React","Header","useState","number1","onChangeNumber1","number2","onChangeNumber2","resetData","styles","container","content","logo","divReset","textReset","StyleSheet","create","backgroundColor","height","display","flexDirection","justifyContent","margin","marginTop","alignItems","width","color","padding","borderRadius","textAlign"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;;AAGA,eAAe,SAASC,MAAT,GAAkB;AAE7B,kBAAmCC,QAAQ,EAA3C;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,eAAhB;;AACA,mBAAmCF,QAAQ,EAA3C;AAAA;AAAA,MAAOG,OAAP;AAAA,MAAgBC,eAAhB;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM,CAEvB,CAFD;;AAIA,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,cACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,IAApB;AAAA;AAAA,QADJ,EAEI,KAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEH,MAAM,CAACI,QAAhC;AAAA,kBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEJ,MAAM,CAACK,SAApB;AAA+B,UAAA,OAAO,EAAEN,SAAxC;AAAA;AAAA;AADJ,QAFJ,EAKI,KAAC,SAAD;AAAW,QAAA,KAAK,EAAC;AAAjB,QALJ;AAAA;AADJ,IADJ;AAWH;AAED,IAAMC,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,SAAS,EAAE;AACPO,IAAAA,eAAe,EAAE,SADV;AAEPC,IAAAA,MAAM,EAAE;AAFD,GADkB;AAK7BP,EAAAA,OAAO,EAAE;AACLQ,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,aAAa,EAAE,KAFV;AAGLC,IAAAA,cAAc,EAAE,eAHX;AAILC,IAAAA,MAAM,EAAE,EAJH;AAKLC,IAAAA,SAAS,EAAE,EALN;AAMLC,IAAAA,UAAU,EAAE,QANP;AAOLC,IAAAA,KAAK,EAAE;AAPF,GALoB;AAc7Bb,EAAAA,IAAI,EAAE;AACFc,IAAAA,KAAK,EAAE;AADL,GAduB;AAiB7Bb,EAAAA,QAAQ,EAAE;AACNI,IAAAA,eAAe,EAAE,SADX;AAENQ,IAAAA,KAAK,EAAE,EAFD;AAGNP,IAAAA,MAAM,EAAE,EAHF;AAINS,IAAAA,OAAO,EAAE,CAJH;AAKNC,IAAAA,YAAY,EAAE;AALR,GAjBmB;AAwB7Bd,EAAAA,SAAS,EAAE;AACPY,IAAAA,KAAK,EAAE,SADA;AAEPG,IAAAA,SAAS,EAAE;AAFJ;AAxBkB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, Button, TouchableOpacity } from 'react-native';\n\nexport default function Header() {\n\n    const [number1, onChangeNumber1] = useState();\n    const [number2, onChangeNumber2] = useState();\n\n    const resetData = () => {\n\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.content}>\n                <Text style={styles.logo}>LOGO</Text>\n                <TouchableOpacity style={styles.divReset}>\n                    <Text style={styles.textReset} onPress={resetData}>Resetar</Text>\n                </TouchableOpacity>\n                <StatusBar style=\"auto\" />\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#1B1726',\n        height: 100,\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        margin: 20,\n        marginTop: 40,\n        alignItems: 'center',\n        width: 330,\n    },\n    logo: {\n        color: 'white',\n    },\n    divReset: {\n        backgroundColor: '#87f2a2',\n        width: 90,\n        height: 30,\n        padding: 5,\n        borderRadius: 10,\n    },\n    textReset: {\n        color: '#121214',\n        textAlign: 'center',\n    }\n});\n"]},"metadata":{},"sourceType":"module"}